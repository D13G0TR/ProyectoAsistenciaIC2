package cl.ipst.sca.frames;

import cl.ipst.sca.config.ConexionBBDD;
import cl.ipst.sca.model.Trabajador;
import javax.swing.ImageIcon;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;

/**
 * Clase que representa la ventana principal del usuario.
 *
 * Esta clase extiende {@link javax.swing.JFrame} y se utiliza para crear la
 * interfaz gráfica del usuario donde se pueden gestionar las acciones
 * relacionadas con la asistencia.
 *
 * @author Roberto Vargas Vargas
 */
public class frmUser extends javax.swing.JFrame {

    /**
     * Crea una nueva instancia de la clase frmUser.
     *
     * Este constructor inicializa los componentes de la interfaz y agrega una
     * instancia de {@link frmMarcarAsistencia} al panel principal de la
     * ventana.
     */
    public frmUser() {
        initComponents();

        frmMarcarAsistencia v = new frmMarcarAsistencia();
        v.setSize(350, 250);
        miPanel.add(v);
        v.setVisible(true);
        miPanel.moveToFront(v);
    }

    /**
     * Cierra un JInternalFrame existente con el título especificado.
     *
     * Este método recorre todos los JInternalFrames en el panel {@code miPanel}
     * y cierra el que coincide con el título dado si está visible.
     *
     * @param title El título del JInternalFrame a cerrar
     */
    private void cerrarFrameExistente(String title) {
        // Obtener todos los JInternalFrames en el JDesktopPane
        for (JInternalFrame frame : miPanel.getAllFrames()) {
            if (frame.getTitle().equals(title) && frame.isVisible()) {
                frame.dispose();
                //return true; // El frame ya está abierto
            }
        }
        //return false; // El frame no está abierto
    }

    ;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        miPanel = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        Marcaciones = new javax.swing.JMenu();
        jmiMarcarAsis = new javax.swing.JMenuItem();
        jmiAsisSemanal = new javax.swing.JMenuItem();
        Ayuda = new javax.swing.JMenu();
        jmiProbarConexion = new javax.swing.JMenuItem();
        jmiAyuda = new javax.swing.JMenuItem();
        jmiLogOut = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout miPanelLayout = new javax.swing.GroupLayout(miPanel);
        miPanel.setLayout(miPanelLayout);
        miPanelLayout.setHorizontalGroup(
            miPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 843, Short.MAX_VALUE)
        );
        miPanelLayout.setVerticalGroup(
            miPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 623, Short.MAX_VALUE)
        );

        Marcaciones.setText("Mi Asistencia");

        jmiMarcarAsis.setText("Marcar Asistencia");
        jmiMarcarAsis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiMarcarAsisActionPerformed(evt);
            }
        });
        Marcaciones.add(jmiMarcarAsis);

        jmiAsisSemanal.setText("Ver Asistencia Semanal");
        Marcaciones.add(jmiAsisSemanal);

        jMenuBar1.add(Marcaciones);

        Ayuda.setText("Ayuda");

        jmiProbarConexion.setText("Probar Conexión a BBDD");
        jmiProbarConexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiProbarConexionActionPerformed(evt);
            }
        });
        Ayuda.add(jmiProbarConexion);

        jmiAyuda.setText("Acerca de");
        jmiAyuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAyudaActionPerformed(evt);
            }
        });
        Ayuda.add(jmiAyuda);

        jMenuBar1.add(Ayuda);

        jmiLogOut.setText("Cerrar Sesión");
        jmiLogOut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jmiLogOutMouseClicked(evt);
            }
        });
        jMenuBar1.add(jmiLogOut);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(miPanel)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(miPanel)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**
     * Maneja la acción del menú Ayuda que muestra información del sistema.
     *
     * Este método se ejecuta cuando se selecciona la opción "Ayuda" del menú.
     * Muestra un cuadro de diálogo con información sobre el sistema y los
     * programadores que lo desarrollaron.
     *
     * @param evt El evento que se genera al seleccionar la opción del menú.
     */
    private void jmiAyudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAyudaActionPerformed
        ImageIcon icono = new ImageIcon(getClass().getResource("/cl/ipst/sca/resources/ipst.png"));
        String mensaje = "<html><div style='text-align: center;'>"
                + "<b>Sistema de Gestión de Asistencia</b><br>"
                + "<hr>"
                + "Programadores: <br>"
                + "Diego Troncoso <br>"
                + "Claudio Trigo <br>"
                + "Roberto Vargas <br>"
                + "<br>"
                + "Docente: Alejandro Vargas<br>"
                + "Integración de Competencias II<br>"
                + "Instituto Profesional Santo Tomás - Sede Arica"
                + "</div></html>";

        JOptionPane.showMessageDialog(null, mensaje,
                "Sistema de Control de Asistencia", JOptionPane.INFORMATION_MESSAGE, icono);
    }//GEN-LAST:event_jmiAyudaActionPerformed
    /**
     * Maneja la acción del menú para probar la conexión a la base de datos.
     *
     * Este método se ejecuta cuando se selecciona la opción "Probar Conexión"
     * del menú. Realiza una prueba de conexión a la base de datos.
     *
     * @param evt El evento que se genera al seleccionar la opción del menú.
     */
    private void jmiProbarConexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiProbarConexionActionPerformed
        //Test de conexión
        ConexionBBDD conexion = new ConexionBBDD();
        conexion.probarConexion();
    }//GEN-LAST:event_jmiProbarConexionActionPerformed
    /**
     * Maneja la acción del menú para marcar asistencia.
     *
     * Este método cierra cualquier frame existente con el título "Marcador" y
     * abre un nuevo frame para marcar la asistencia.
     *
     * @param evt El evento que se genera al seleccionar la opción del menú.
     */
    private void jmiMarcarAsisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiMarcarAsisActionPerformed
        cerrarFrameExistente("Marcador");
        frmMarcarAsistencia v = new frmMarcarAsistencia();
        v.setSize(350, 250);
        miPanel.add(v);
        v.setVisible(true);
    }//GEN-LAST:event_jmiMarcarAsisActionPerformed
    /**
     * Maneja la acción de cerrar sesión del usuario.
     *
     * Este método se ejecuta cuando se hace clic en el menú "Cerrar Sesión".
     * Muestra un cuadro de diálogo de confirmación y, si se confirma, cierra la
     * sesión del usuario y muestra el formulario de inicio de sesión.
     *
     * @param evt El evento que se genera al hacer clic en el menú.
     */
    private void jmiLogOutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jmiLogOutMouseClicked
        int respuesta = JOptionPane.showConfirmDialog(
                null, // Componente padre
                "¿Desea cerrar sesión?", // Mensaje
                "Confirmación", // Título del diálogo
                JOptionPane.YES_NO_OPTION, // Tipo de opciones (Sí/No)
                JOptionPane.QUESTION_MESSAGE // Tipo de mensaje (pregunta)
        );
        if (respuesta == JOptionPane.YES_OPTION) {
            //Cerramos la ventana
            dispose();

            //Cerramos la sesión SINGLETON
            Trabajador.getInstancia().cerrarSesion();

            frmLogin v = new frmLogin();
            v.setSize(340, 400);
            v.setLocationRelativeTo(null);
            v.setVisible(true);
        }
    }//GEN-LAST:event_jmiLogOutMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmUser.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmUser.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmUser.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmUser.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmUser().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Ayuda;
    private javax.swing.JMenu Marcaciones;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jmiAsisSemanal;
    private javax.swing.JMenuItem jmiAyuda;
    private javax.swing.JMenu jmiLogOut;
    private javax.swing.JMenuItem jmiMarcarAsis;
    private javax.swing.JMenuItem jmiProbarConexion;
    private javax.swing.JDesktopPane miPanel;
    // End of variables declaration//GEN-END:variables
}
